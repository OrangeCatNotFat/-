{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u88C5\\u4FEE\\u5C0F\\u7A0B\\u5E8F\\\\decorate\\\\src\\\\routes\\\\privateRoute.js\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { Component } from \"react\"; // 定义鉴权函数\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet authenticate = () => {\n  // 获取页面中存储的token\n  let token = sessionStorage.getItem(\"token\"); // 根据是否存在token，返回不同的值\n\n  return token ? true : false;\n}; // 定义路由组件\n\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => authenticate() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 47\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/login\",\n        // 指定重定向的路径\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["E:/装修小程序/decorate/src/routes/privateRoute.js"],"names":["Route","Redirect","Component","authenticate","token","sessionStorage","getItem","PrivateRoute","component","rest","props","pathname","state","from","location"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAAQC,SAAR,QAAwB,OAAxB,C,CAEA;;;;AACA,IAAIC,YAAY,GAAG,MAAM;AACrB;AACA,MAAIC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAZ,CAFqB,CAGrB;;AACA,SAAOF,KAAK,GAAG,IAAH,GAAU,KAAtB;AACH,CALD,C,CAOA;;;AACA,MAAMG,YAAY,GAAG,QAAqC;AAAA,MAApC;AAACC,IAAAA,SAAS,EAAEN,SAAZ;AAAuB,OAAGO;AAA1B,GAAoC;AACtD,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EAAEC,KAAK,IAAIP,YAAY,kBAAK,QAAC,SAAD,OAAeO;AAAf;AAAA;AAAA;AAAA;AAAA,YAAL,gBACzB,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AACVC,QAAAA,QAAQ,EAAE,QADA;AACU;AACpBC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAFG;AAAd;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAZD;;KAAMP,Y;AAcN,eAAeA,YAAf","sourcesContent":["import {Route, Redirect} from \"react-router-dom\";\r\nimport {Component} from \"react\";\r\n\r\n// 定义鉴权函数\r\nlet authenticate = () => {\r\n    // 获取页面中存储的token\r\n    let token = sessionStorage.getItem(\"token\");\r\n    // 根据是否存在token，返回不同的值\r\n    return token ? true : false;\r\n}\r\n\r\n// 定义路由组件\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => authenticate() ? <Component {...props}/> :\r\n                <Redirect to={{\r\n                    pathname: \"/login\", // 指定重定向的路径\r\n                    state: {from: props.location}\r\n                }}/>\r\n            }\r\n        ></Route>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}