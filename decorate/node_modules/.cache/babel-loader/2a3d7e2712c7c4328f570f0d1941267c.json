{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u88C5\\u4FEE\\u5C0F\\u7A0B\\u5E8F\\\\decorate\\\\src\\\\components\\\\cate.js\";\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Button, Form, Image, Input, message, Modal, Table, Upload } from \"antd\";\nimport axios from \"axios\";\nimport { HOST, PORT } from \"../config/apiconfig\";\nimport Draggable from \"react-draggable\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.draggleRef = /*#__PURE__*/React.createRef();\n    this.addRef = /*#__PURE__*/React.createRef();\n\n    this.getAllCate = () => {\n      // 获取所有的案例\n      axios.get(`${HOST}:${PORT}/cate/all`).then(result => {\n        if (result.data.status === 200) {\n          this.setState({\n            allcate: result.data.data\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.addCateModal = () => {\n      // 打开添加类别的模态框\n      this.setState({\n        addVisiable: true\n      });\n    };\n\n    this.handleCancel = () => {\n      // 取消显示模态框\n      this.setState({\n        addVisiable: false,\n        fileList: [] // 将图片文件删掉\n\n      });\n    };\n\n    this.onStart = (event, uiData) => {\n      var _this$draggleRef$curr;\n\n      // 拖拽模态框\n      const {\n        clientWidth,\n        clientHeight\n      } = window.document.documentElement; // 获取屏幕宽高\n\n      const targetRect = (_this$draggleRef$curr = this.draggleRef.current) === null || _this$draggleRef$curr === void 0 ? void 0 : _this$draggleRef$curr.getBoundingClientRect();\n\n      if (!targetRect) {\n        return;\n      }\n\n      this.setState({\n        bounds: {\n          left: -targetRect.left + uiData.x,\n          right: clientWidth - (targetRect.right - uiData.x),\n          top: -targetRect.top + uiData.y,\n          bottom: clientHeight - (targetRect.bottom - uiData.y)\n        }\n      });\n    };\n\n    this.getBase64 = file => {\n      // 读取图片文件\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader(); // 创建读取文件的对象\n\n        reader.readAsDataURL(file); // 读取文件的url\n\n        reader.onload = () => resolve(reader.result); // 返回文件内容\n\n\n        reader.onerror = err => reject(err);\n      });\n    };\n\n    this.beforeUpload = file => {\n      // 对图片格式进行校验\n      const isCorrect = file.type === \"image/jpeg\" || file.type === \"image/png\"; // 判断图片格式是否正确\n\n      if (!isCorrect) {\n        // 如果不正确\n        message.info(\"请上传JPG或PNG格式的图片\");\n        return Upload.LIST_IGNORE; // 阻止上传\n      }\n\n      return isCorrect;\n    };\n\n    this.handlePreview = async file => {\n      // 图片预览功能\n      if (!file.url && !file.preview) {\n        // 如果文件没有打开且没有预览，打开并预览\n        file.preview = await this.getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewVisiable: true,\n        // 打开预览模态框\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\n        // 设置标题\n        previewImage: file.url || file.preview // 设置预览图片\n\n      });\n    };\n\n    this.handleImageChange = _ref => {\n      let {\n        fileList\n      } = _ref;\n      // 设置上传的图片列表\n      this.setState({\n        fileList: fileList\n      });\n    };\n\n    this.confirmAdd = () => {\n      // 确定是否添加类别模态框\n      Modal.confirm({\n        title: \"确定添加类别\",\n        okText: \"确定\",\n        cancelText: \"取消\",\n        centered: true,\n        onOk: this.addCate\n      });\n    };\n\n    this.addCate = async () => {\n      // 添加类别\n      await this.addRef.current.validateFields().then(value => {\n        axios.post(`${HOST}:${PORT}/cate/add`, {\n          event: {\n            name: value.name,\n            img: this.state.fileList[0].response.imgPath\n          }\n        }).then(result => {\n          if (result.data.status === 201) {\n            message.success(result.data.msg);\n            this.setState({\n              addVisiable: false,\n              // 关闭添加模态框\n              fileList: [] // 将图片列表制空\n\n            });\n          }\n        });\n      });\n    };\n\n    this.state = {\n      allcate: [],\n      // 存放所有的类别\n      addVisiable: false,\n      // 是否显示添加模态框\n      bounds: {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0\n      },\n      // 拖拽模态框初始参数\n      disabled: true,\n      // 是否可以拖拽\n      fileList: [],\n      // 图片文件列表\n      previewVisiable: false,\n      // 是否预览图片文件\n      previewTitle: \"\",\n      // 预览模态框上标题\n      previewImage: \"\" // 预览的图片文件\n\n    };\n  }\n\n  componentDidMount() {\n    this.getAllCate(); // 页面加载完成后获取全部案例数据\n  }\n\n  render() {\n    const uploadButton =\n    /*#__PURE__*/\n    // 定义未上传时显示的按钮\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"8px\"\n        },\n        children: \"\\u4E0A\\u4F20\\u5C01\\u9762\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"30px 20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input.Group, {\n          compact: true,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            id: \"searchCate\",\n            style: {\n              width: \"200px\"\n            },\n            placeholder: \"请输入案例名称\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"\\u641C\\u7D22\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: this.addCateModal,\n            children: \"\\u6DFB\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          style: {\n            marginTop: \"20px\",\n            textAlign: \"center\"\n          },\n          dataSource: this.state.allcate,\n          rowKey: record => record.id,\n          children: [/*#__PURE__*/_jsxDEV(Table.Column, {\n            align: \"center\",\n            title: \"类别编号\",\n            dataIndex: \"id\"\n          }, \"id\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Column, {\n            align: \"center\",\n            title: \"类别名称\",\n            dataIndex: \"name\"\n          }, \"name\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Column, {\n            align: \"center\",\n            title: \"类别标识\",\n            dataIndex: \"img\",\n            render: (value, record) => {\n              // value是当前项的数据，record是整行的数据\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  src: value,\n                  alt: record.name,\n                  height: 50\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 51\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 47\n              }, this);\n            }\n          }, \"img\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Column, {\n            align: \"center\",\n            title: \"创建时间\",\n            dataIndex: \"created_at\"\n          }, \"created_at\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Column, {\n            align: \"center\",\n            title: \"更新时间\",\n            dataIndex: \"updated_at\"\n          }, \"updated_at\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Column, {\n            align: \"center\",\n            title: \"操作\",\n            dataIndex: \"actions\",\n            render: (value, record) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"link\",\n                  children: \"\\u7F16\\u8F91\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"link\",\n                  children: \"\\u5220\\u9664\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this);\n            }\n          }, \"actions\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"100%\",\n              cursor: \"move\"\n            } // 当鼠标移动到标题上时，鼠标变成十字\n            ,\n            onMouseOver: () => {\n              // 当鼠标移动进标题时，设置为可以拖拽\n              if (this.state.disabled) {\n                this.setState({\n                  disabled: false // 将不可拖拽关掉\n\n                });\n              }\n            },\n            onMouseOut: () => {\n              // 当鼠标移动出标题时，设置不可拖拽\n              this.setState({\n                disabled: true // 打开不可拖拽\n\n              });\n            },\n            children: \"\\u6DFB\\u52A0\\u7C7B\\u522B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 35\n          }, this),\n          visible: this.state.addVisiable,\n          centered: true,\n          okText: \"提交\",\n          cancelText: \"取消\",\n          onCancel: this.handleCancel,\n          onOk: this.confirmAdd,\n          destroyOnClose: true,\n          modalRender: modal => /*#__PURE__*/_jsxDEV(Draggable, {\n            disabled: this.state.disabled,\n            bounds: this.state.bounds,\n            onStart: (event, uiData) => this.onStart(event, uiData),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: this.draggleRef,\n              children: modal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 32\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            ref: this.addRef,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"name\",\n              label: \"类别名称\",\n              rules: [{\n                required: true,\n                message: \"请输入类别名称\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"img\",\n              label: \"类别标识\",\n              rules: [{\n                required: true\n              }],\n              children: /*#__PURE__*/_jsxDEV(Upload, {\n                action: `${HOST}:${PORT}/cate/upload`,\n                name: \"img\",\n                listType: \"picture-card\",\n                fileList: this.state.fileList,\n                onChange: this.handleImageChange,\n                data: file => ({\n                  photoContent: file\n                }),\n                onPreview: this.handlePreview,\n                beforeUpload: this.beforeUpload,\n                maxCount: 1,\n                children: this.state.fileList.length > 1 ? null : uploadButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Cate;","map":{"version":3,"sources":["E:/装修小程序/decorate/src/components/cate.js"],"names":["React","BrowserRouter","Button","Form","Image","Input","message","Modal","Table","Upload","axios","HOST","PORT","Draggable","PlusOutlined","Cate","Component","constructor","props","draggleRef","createRef","addRef","getAllCate","get","then","result","data","status","setState","allcate","catch","err","console","log","addCateModal","addVisiable","handleCancel","fileList","onStart","event","uiData","clientWidth","clientHeight","window","document","documentElement","targetRect","current","getBoundingClientRect","bounds","left","x","right","top","y","bottom","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","beforeUpload","isCorrect","type","info","LIST_IGNORE","handlePreview","url","preview","originFileObj","previewVisiable","previewTitle","name","substring","lastIndexOf","previewImage","handleImageChange","confirmAdd","confirm","title","okText","cancelText","centered","onOk","addCate","validateFields","value","post","img","state","response","imgPath","success","msg","disabled","componentDidMount","render","uploadButton","marginTop","padding","width","textAlign","record","id","cursor","modal","required","photoContent","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Button, Form, Image, Input, message, Modal, Table, Upload} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {HOST, PORT} from \"../config/apiconfig\";\r\nimport Draggable from \"react-draggable\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\n\r\nclass Cate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allcate: [], // 存放所有的类别\r\n            addVisiable: false, // 是否显示添加模态框\r\n            bounds: {left: 0, top: 0, bottom: 0, right: 0}, // 拖拽模态框初始参数\r\n            disabled: true, // 是否可以拖拽\r\n            fileList: [], // 图片文件列表\r\n            previewVisiable: false, // 是否预览图片文件\r\n            previewTitle: \"\", // 预览模态框上标题\r\n            previewImage: \"\", // 预览的图片文件\r\n        }\r\n    }\r\n\r\n    draggleRef = React.createRef(); // 操作模态框的移动\r\n    addRef = React.createRef(); // 操作添加表单\r\n\r\n    getAllCate = () => { // 获取所有的案例\r\n        axios.get(`${HOST}:${PORT}/cate/all`)\r\n            .then(result => {\r\n                if (result.data.status === 200) {\r\n                    this.setState({\r\n                        allcate: result.data.data\r\n                    })\r\n                }\r\n            }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    addCateModal = () => { // 打开添加类别的模态框\r\n        this.setState({\r\n            addVisiable: true\r\n        })\r\n    }\r\n\r\n    handleCancel = () => { // 取消显示模态框\r\n        this.setState({\r\n            addVisiable: false,\r\n            fileList: [] // 将图片文件删掉\r\n        })\r\n    }\r\n\r\n    onStart = (event, uiData) => { // 拖拽模态框\r\n        const {clientWidth, clientHeight} = window.document.documentElement; // 获取屏幕宽高\r\n        const targetRect = this.draggleRef.current?.getBoundingClientRect();\r\n        if (!targetRect) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            bounds: {\r\n                left: -targetRect.left + uiData.x,\r\n                right: clientWidth - (targetRect.right - uiData.x),\r\n                top: -targetRect.top + uiData.y,\r\n                bottom: clientHeight - (targetRect.bottom - uiData.y),\r\n            }\r\n        })\r\n    }\r\n\r\n    getBase64 = (file) => { // 读取图片文件\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader(); // 创建读取文件的对象\r\n            reader.readAsDataURL(file); // 读取文件的url\r\n            reader.onload = () => resolve(reader.result); // 返回文件内容\r\n            reader.onerror = (err) => reject(err);\r\n        })\r\n    }\r\n\r\n    beforeUpload = (file) => { // 对图片格式进行校验\r\n        const isCorrect = (file.type === \"image/jpeg\" || file.type === \"image/png\"); // 判断图片格式是否正确\r\n        if (!isCorrect) { // 如果不正确\r\n            message.info(\"请上传JPG或PNG格式的图片\");\r\n            return Upload.LIST_IGNORE; // 阻止上传\r\n        }\r\n        return isCorrect;\r\n    }\r\n\r\n    handlePreview = async (file) => { // 图片预览功能\r\n        if (!file.url && !file.preview) { // 如果文件没有打开且没有预览，打开并预览\r\n            file.preview = await this.getBase64(file.originFileObj);\r\n        }\r\n        this.setState({\r\n            previewVisiable: true, // 打开预览模态框\r\n            previewTitle: file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1), // 设置标题\r\n            previewImage: file.url || file.preview, // 设置预览图片\r\n        })\r\n    }\r\n\r\n    handleImageChange = ({fileList}) => { // 设置上传的图片列表\r\n        this.setState({\r\n            fileList: fileList\r\n        })\r\n    }\r\n\r\n    confirmAdd = () => { // 确定是否添加类别模态框\r\n        Modal.confirm({\r\n            title: \"确定添加类别\",\r\n            okText: \"确定\",\r\n            cancelText: \"取消\",\r\n            centered: true,\r\n            onOk: this.addCate\r\n        })\r\n    }\r\n\r\n    addCate = async () => { // 添加类别\r\n        await this.addRef.current.validateFields()\r\n            .then(value => {\r\n                axios.post(`${HOST}:${PORT}/cate/add`, {\r\n                    event: {\r\n                        name: value.name,\r\n                        img: this.state.fileList[0].response.imgPath\r\n                    }\r\n                }).then(result => {\r\n                    if (result.data.status === 201) {\r\n                        message.success(result.data.msg);\r\n                        this.setState({\r\n                            addVisiable: false, // 关闭添加模态框\r\n                            fileList: [] // 将图片列表制空\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllCate(); // 页面加载完成后获取全部案例数据\r\n    }\r\n\r\n    render() {\r\n        const uploadButton = ( // 定义未上传时显示的按钮\r\n            <div>\r\n                <PlusOutlined/>\r\n                <div style={{marginTop: \"8px\"}}>上传封面</div>\r\n            </div>);\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <div style={{padding: \"30px 20px\"}}>\r\n                    <Input.Group compact>\r\n                        <Input id={\"searchCate\"} style={{width: \"200px\"}} placeholder={\"请输入案例名称\"}/>&nbsp;&nbsp;&nbsp;\r\n                        <Button type={\"primary\"}>搜索</Button>&nbsp;&nbsp;&nbsp;\r\n                        <Button type={\"primary\"} onClick={this.addCateModal}>添加</Button>\r\n                    </Input.Group>\r\n                    <Table style={{marginTop: \"20px\", textAlign: \"center\"}} dataSource={this.state.allcate}\r\n                           rowKey={record => record.id}>\r\n                        <Table.Column align={\"center\"} title={\"类别编号\"} key={\"id\"} dataIndex={\"id\"}></Table.Column>\r\n                        <Table.Column align={\"center\"} title={\"类别名称\"} key={\"name\"} dataIndex={\"name\"}></Table.Column>\r\n                        <Table.Column align={\"center\"} title={\"类别标识\"} key={\"img\"} dataIndex={\"img\"}\r\n                                      render={(value, record) => {\r\n                                          // value是当前项的数据，record是整行的数据\r\n                                          return (\r\n                                              <div>\r\n                                                  <Image src={value} alt={record.name} height={50}/>\r\n                                              </div>\r\n                                          )\r\n                                      }}></Table.Column>\r\n                        <Table.Column align={\"center\"} title={\"创建时间\"} key={\"created_at\"}\r\n                                      dataIndex={\"created_at\"}></Table.Column>\r\n                        <Table.Column align={\"center\"} title={\"更新时间\"} key={\"updated_at\"}\r\n                                      dataIndex={\"updated_at\"}></Table.Column>\r\n                        <Table.Column align={\"center\"} title={\"操作\"} key={\"actions\"}\r\n                                      dataIndex={\"actions\"} render={(value, record) => {\r\n                            return (\r\n                                <div>\r\n                                    <Button type={\"link\"}>编辑</Button>\r\n                                    <Button type={\"link\"}>删除</Button>\r\n                                </div>\r\n                            )\r\n                        }}></Table.Column>\r\n                    </Table>\r\n                    <Modal title={<div style={{width: \"100%\", cursor: \"move\"}} // 当鼠标移动到标题上时，鼠标变成十字\r\n                                       onMouseOver={() => { // 当鼠标移动进标题时，设置为可以拖拽\r\n                                           if (this.state.disabled) {\r\n                                               this.setState({\r\n                                                   disabled: false // 将不可拖拽关掉\r\n                                               })\r\n                                           }\r\n                                       }}\r\n                                       onMouseOut={() => { // 当鼠标移动出标题时，设置不可拖拽\r\n                                           this.setState({\r\n                                               disabled: true // 打开不可拖拽\r\n                                           })\r\n                                       }}>添加类别</div>}\r\n                           visible={this.state.addVisiable}\r\n                           centered={true}\r\n                           okText={\"提交\"}\r\n                           cancelText={\"取消\"}\r\n                           onCancel={this.handleCancel}\r\n                           onOk={this.confirmAdd}\r\n                           destroyOnClose={true}\r\n                           modalRender={modal => (\r\n                               <Draggable disabled={this.state.disabled} bounds={this.state.bounds}\r\n                                          onStart={(event, uiData) => this.onStart(event, uiData)}>\r\n                                   <div ref={this.draggleRef}>{modal}</div>\r\n                               </Draggable>\r\n                           )}>\r\n                        <Form ref={this.addRef}>\r\n                            <Form.Item name={\"name\"} label={\"类别名称\"} rules={[{required: true, message: \"请输入类别名称\"}]}>\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item name={\"img\"} label={\"类别标识\"} rules={[{required: true}]}>\r\n                                <Upload action={`${HOST}:${PORT}/cate/upload`}\r\n                                        name={\"img\"}\r\n                                        listType={\"picture-card\"}\r\n                                        fileList={this.state.fileList}\r\n                                        onChange={this.handleImageChange}\r\n                                        data={file => ({photoContent: file})}\r\n                                        onPreview={this.handlePreview}\r\n                                        beforeUpload={this.beforeUpload}\r\n                                        maxCount={1}>\r\n                                    {this.state.fileList.length > 1 ? null : uploadButton}\r\n                                </Upload>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cate;"]},"metadata":{},"sourceType":"module"}