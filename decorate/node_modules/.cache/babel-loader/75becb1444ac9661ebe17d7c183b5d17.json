{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u88C5\\u4FEE\\u5C0F\\u7A0B\\u5E8F\\\\decorate\\\\src\\\\components\\\\administrator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Button, Input, message, Radio, Select, Space, Table, Tag } from \"antd\";\nimport axios from \"axios\";\nimport { HOST, PORT } from \"../config/apiconfig\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Administrator = () => {\n  _s();\n\n  const [admins, setAdmins] = useState([]); // 存放所有的管理员数据\n\n  const [state, setState] = useState(false); // 记录当前页面是否修改\n\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]); // 记录选择的行的id\n\n  const addButton = [/*#__PURE__*/_jsxDEV(Button, {\n    type: \"primary\",\n    children: \"\\u6DFB\\u52A0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 24\n  }, this)]; // 控制添加按钮显示\n  // 查询所有的管理员\n\n  const allAdministrator = () => {\n    axios.get(`${HOST}:${PORT}/admins/all`).then(result => {\n      if (result.data.status === 200) {\n        setAdmins(result.data.data);\n      }\n\n      if (result.data.status == 400) {\n        message.error(result.data.msg);\n      }\n    });\n  }; // 定义管理员身份标签\n\n\n  const tagArr = [/*#__PURE__*/_jsxDEV(Tag, {\n    color: \"red\",\n    children: \"\\u8D85\\u7EA7\\u7BA1\\u7406\\u5458\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Tag, {\n    color: \"green\",\n    children: \"\\u666E\\u901A\\u7BA1\\u7406\\u5458\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Tag, {\n    color: \"default\",\n    children: \"\\u8D26\\u53F7\\u5DF2\\u505C\\u7528\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this)];\n  const columns = [{\n    title: \"用户名\",\n    dataIndex: \"username\",\n    key: \"username\"\n  }, {\n    title: \"姓名\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"身份\",\n    dataIndex: \"role\",\n    key: \"role\",\n    render: role => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tagArr[role]\n    }, \"role\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: \"上次登录\",\n    dataIndex: \"last_login_at\",\n    key: \"last_login_at\"\n  }, {\n    title: \"创建时间\",\n    dataIndex: \"created_at\",\n    key: \"created_at\"\n  }, {\n    title: \"更新时间\",\n    dataIndex: \"updated_at\",\n    key: \"updated_at\"\n  }, {\n    title: \"操作\",\n    key: \"action\",\n    render: (text, record, index) =>\n    /*#__PURE__*/\n    // text：当前行的值，record：当前行的数据，index：当前行索引\n    // text和record是一样的结果，显示具体信息,index是索引，该索引是表格的索引0,1,2\n    _jsxDEV(Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 49\n        }, this),\n        children: \"\\u7F16\\u8F91\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 49\n        }, this),\n        danger: true,\n        children: \"\\u5220\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)\n  }];\n\n  const onSelectedChange = key => {\n    setSelectedRowKeys(key);\n  };\n\n  useEffect(() => allAdministrator(), [state]); // 设置刷新当前页面的条件\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"30px 20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"40%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Input.Group, {\n          compact: true,\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: \"文章标题\",\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"title\",\n              children: \"\\u6587\\u7AE0\\u6807\\u9898\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"cate\",\n              children: \"\\u6587\\u7AE0\\u7C7B\\u522B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: \"200px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"\\u641C\\u7D22\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), \"\\xA0\\xA0\\xA0\", addButton[sessionStorage.getItem(\"role\")]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        rowKey: record => record.id,\n        columns: columns,\n        dataSource: admins,\n        style: {\n          marginTop: \"20px\"\n        },\n        rowSelection: {\n          columnTitle: \"选择\",\n          columnWidth: \"60px\",\n          selectedRowKeys,\n          onChange: onSelectedChange\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Radio.Group, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Administrator, \"QFJwUgRZECxzUqehcMjtnKdTHtI=\");\n\n_c = Administrator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Administrator\");","map":{"version":3,"sources":["E:/装修小程序/decorate/src/components/administrator.js"],"names":["React","useEffect","useState","BrowserRouter","Button","Input","message","Radio","Select","Space","Table","Tag","axios","HOST","PORT","DeleteOutlined","EditOutlined","Administrator","admins","setAdmins","state","setState","selectedRowKeys","setSelectedRowKeys","addButton","allAdministrator","get","then","result","data","status","error","msg","tagArr","columns","title","dataIndex","key","render","role","text","record","index","onSelectedChange","padding","width","display","sessionStorage","getItem","id","marginTop","columnTitle","columnWidth","onChange"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Button, Input, message, Radio, Select, Space, Table, Tag} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {HOST, PORT} from \"../config/apiconfig\";\r\nimport {DeleteOutlined, EditOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nexport const Administrator = () => {\r\n    const [admins, setAdmins] = useState([]); // 存放所有的管理员数据\r\n    const [state, setState] = useState(false); // 记录当前页面是否修改\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]); // 记录选择的行的id\r\n    const addButton = [<Button type={\"primary\"}>添加</Button>] // 控制添加按钮显示\r\n\r\n    // 查询所有的管理员\r\n    const allAdministrator = () => {\r\n        axios.get(`${HOST}:${PORT}/admins/all`)\r\n            .then(result => {\r\n                if (result.data.status === 200) {\r\n                    setAdmins(result.data.data);\r\n                }\r\n                if (result.data.status == 400) {\r\n                    message.error(result.data.msg);\r\n                }\r\n            })\r\n    }\r\n\r\n    // 定义管理员身份标签\r\n    const tagArr = [\r\n        <Tag color={\"red\"}>超级管理员</Tag>,\r\n        <Tag color={\"green\"}>普通管理员</Tag>,\r\n        <Tag color={\"default\"}>账号已停用</Tag>\r\n    ]\r\n\r\n    const columns = [\r\n        {\r\n            title: \"用户名\",\r\n            dataIndex: \"username\",\r\n            key: \"username\"\r\n        },\r\n        {\r\n            title: \"姓名\",\r\n            dataIndex: \"name\",\r\n            key: \"name\"\r\n        },\r\n        {\r\n            title: \"身份\",\r\n            dataIndex: \"role\",\r\n            key: \"role\",\r\n            render: role => (\r\n                <div key={\"role\"}>\r\n                    {tagArr[role]}\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            title: \"上次登录\",\r\n            dataIndex: \"last_login_at\",\r\n            key: \"last_login_at\"\r\n        },\r\n        {\r\n            title: \"创建时间\",\r\n            dataIndex: \"created_at\",\r\n            key: \"created_at\"\r\n        },\r\n        {\r\n            title: \"更新时间\",\r\n            dataIndex: \"updated_at\",\r\n            key: \"updated_at\"\r\n        },\r\n        {\r\n            title: \"操作\",\r\n            key: \"action\",\r\n            render: (text, record, index) => ( // text：当前行的值，record：当前行的数据，index：当前行索引\r\n                // text和record是一样的结果，显示具体信息,index是索引，该索引是表格的索引0,1,2\r\n                <Space size={\"middle\"}>\r\n                    <Button type={\"link\"} icon={<EditOutlined/>}>编辑</Button>\r\n                    <Button type={\"link\"} icon={<DeleteOutlined/>} danger>删除</Button>\r\n                </Space>\r\n            )\r\n\r\n        }\r\n    ]\r\n\r\n    const onSelectedChange = (key) => {\r\n        setSelectedRowKeys(key);\r\n    }\r\n\r\n    useEffect(() => allAdministrator(), [state]); // 设置刷新当前页面的条件\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div style={{padding: \"30px 20px\"}}>\r\n                <div style={{width: \"40%\"}}>\r\n                    <Input.Group compact style={{display: \"flex\"}}>\r\n                        <Select defaultValue={\"文章标题\"}>\r\n                            <Select.Option value={\"title\"}>文章标题</Select.Option>\r\n                            <Select.Option value={\"cate\"}>文章类别</Select.Option>\r\n                        </Select>\r\n                        <Input style={{width: \"200px\"}}/>&nbsp;&nbsp;&nbsp;\r\n                        <Button type={\"primary\"}>搜索</Button>&nbsp;&nbsp;&nbsp;\r\n                        {addButton[sessionStorage.getItem(\"role\")]}\r\n                    </Input.Group>\r\n                </div>\r\n                <Table rowKey={record => record.id} columns={columns} dataSource={admins}\r\n                       style={{marginTop: \"20px\"}} rowSelection={{\r\n                    columnTitle: \"选择\",\r\n                    columnWidth: \"60px\",\r\n                    selectedRowKeys,\r\n                    onChange: onSelectedChange\r\n                }}></Table>\r\n                <Radio.Group/>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}