{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u88C5\\u4FEE\\u5C0F\\u7A0B\\u5E8F\\\\decorate\\\\src\\\\components\\\\article.js\";\nimport React from \"react\";\nimport { Button, Col, Drawer, Form, Input, List, message, Modal, Row, Select, Space, Upload } from \"antd\";\nimport axios from \"axios\";\nimport { HOST, PORT } from \"../config/apiconfig\";\nimport BraftEditor from \"braft-editor\";\nimport \"braft-editor/dist/index.css\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Article extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addRef = /*#__PURE__*/React.createRef();\n\n    this.getAllCate = () => {\n      // 获取所有的类别\n      axios.get(`${HOST}:${PORT}/cate/article`).then(result => {\n        if (result.data.status === 200) {\n          this.setState({\n            allCate: result.data.data\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getAllArticle = () => {\n      // 获取所有的文章信息\n      axios.get(`${HOST}:${PORT}/article/all`).then(result => {\n        if (result.data.status === 200) {\n          this.setState({\n            allArticle: result.data.data\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getBase64 = file => {\n      // 读取图片文件\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader(); // 创建读取文件的对象\n\n        reader.readAsDataURL(file); // 读取文件的url\n\n        reader.onload = () => resolve(reader.result); // 返回文件内容\n\n\n        reader.onerror = err => reject(err);\n      });\n    };\n\n    this.beforeUpload = file => {\n      // 对图片格式进行校验\n      const isCorrect = file.type === \"image/jpeg\" || file.type === \"image/png\"; // 判断图片格式是否正确\n\n      if (!isCorrect) {\n        // 如果不正确\n        message.info(\"请上传JPG或PNG格式的图片\");\n        return Upload.LIST_IGNORE; // 阻止上传\n      }\n\n      return isCorrect;\n    };\n\n    this.handlePreview = async file => {\n      // 图片预览功能\n      if (!file.url && !file.preview) {\n        // 如果文件没有打开且没有预览，打开并预览\n        file.preview = await this.getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewVisiable: true,\n        // 打开预览模态框\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\n        // 设置标题\n        previewImage: file.url || file.preview // 设置预览图片\n\n      });\n    };\n\n    this.handleImageChange = _ref => {\n      let {\n        fileList\n      } = _ref;\n      // 设置上传的图片列表\n      this.setState({\n        fileList: fileList\n      });\n    };\n\n    this.confirmAdd = () => {\n      // 确定是否添加类别模态框\n      Modal.confirm({\n        title: \"确定添加类别\",\n        okText: \"确定\",\n        cancelText: \"取消\",\n        centered: true,\n        onOk: this.addArticle\n      });\n    };\n\n    this.addArticle = async () => {\n      // 添加文章\n      try {\n        await this.addRef.current.validateFields().then(value => {\n          axios.post(`${HOST}:${PORT}/article/add`, {\n            event: {\n              title: value.title,\n              cate: value.cate,\n              desc: value.desc,\n              cover: this.state.fileList[0].response.imgPath,\n              content: value.content.toHTML()\n            }\n          }).then(result => {\n            if (result.data.status === 201) {\n              message.success(result.data.msg);\n              this.setState({\n                addVisiable: false,\n                // 关闭添加抽屉\n                fileList: [] // 将图片列表制空\n\n              });\n              this.getAllArticle();\n            }\n          });\n        });\n      } catch (err) {// throw err;\n      }\n    };\n\n    this.state = {\n      allCate: [],\n      // 存放所有的类别\n      allArticle: [],\n      // 存放所有的文章\n      selectedValue: \"\",\n      // 记录当前选择器是文章标题还是文章类别\n      addVisiable: false,\n      // 记录添加抽屉是否打开\n      fileList: [],\n      // 图片文件列表\n      previewVisiable: false,\n      // 是否预览图片文件\n      previewTitle: \"\",\n      // 预览模态框上标题\n      previewImage: \"\" // 预览的图片文件\n\n    };\n  }\n\n  componentDidMount() {\n    // 页面加载完成后执行\n    this.getAllCate(); // 获取所有的类别\n\n    this.getAllArticle();\n  }\n\n  render() {\n    const {\n      allCate,\n      selectedValue\n    } = this.state;\n    const editorProps = {\n      contentFormat: \"html\",\n      initialContent: \"<p>hello</p>\" // onChange: this.handleChange,\n      // onRawChange: this.handleRowChange\n\n    };\n\n    const uploadButton =\n    /*#__PURE__*/\n    // 定义未上传时显示的按钮\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"8px\"\n        },\n        children: \"\\u4E0A\\u4F20\\u5C01\\u9762\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"30px 20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"40%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input.Group, {\n          compact: true,\n          style: {\n            display: \"flex\"\n          },\n          className: \"select\",\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: \"title\",\n            onChange: value => {\n              // 当变化时调用\n              // value是cate和title\n              this.setState({\n                selectedValue: value\n              });\n              this.getAllArticle(); // 切换时刷新文章\n            },\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"title\",\n              children: \"\\u6587\\u7AE0\\u6807\\u9898\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"cate\",\n              children: \"\\u6587\\u7AE0\\u7C7B\\u522B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), selectedValue == \"cate\" ? /*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              width: \"200px\"\n            },\n            defaultValue: allCate[0].id,\n            children: allCate.map(item => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: item.id,\n                children: item.name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: \"200px\"\n            },\n            id: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 30\n          }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"\\u641C\\u7D22\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.setState({\n              addVisiable: true\n            }),\n            children: \"\\u6DFB\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n            width: \"80%\",\n            visible: this.state.addVisiable,\n            onClose: () => this.setState({\n              addVisiable: false,\n              fileList: []\n            }),\n            title: \"编辑文章\",\n            extra: /*#__PURE__*/_jsxDEV(Space, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: this.confirmAdd,\n                children: \"\\u53D1\\u5E03\\u6587\\u7AE0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: () => this.setState({\n                  addVisiable: false,\n                  fileList: []\n                }),\n                children: \"\\u53D6\\u6D88\\u7F16\\u8F91\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 37\n            }, this),\n            destroyOnClose: true,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              ref: this.addRef,\n              layout: \"vertical\",\n              hideRequiredMark: true,\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  span: 24,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"title\",\n                    rules: [{\n                      required: true,\n                      message: \"请输入文章标题\"\n                    }],\n                    initialValue: \"【无标题】\",\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      placeholder: \"请输入文章标题\",\n                      size: \"large\",\n                      style: {\n                        borderRadius: \"20px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  span: 24,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"content\",\n                    children: /*#__PURE__*/_jsxDEV(BraftEditor, { ...editorProps,\n                      style: {\n                        border: \"1px solid #d9d9d9\"\n                      },\n                      placeholder: \"在这里输入正文\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  span: 5,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"cate\",\n                    rules: [{\n                      required: true,\n                      message: \"请选择类别\"\n                    }],\n                    label: \"文章类别\",\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      style: {\n                        width: \"200px\"\n                      },\n                      children: allCate.map(item => {\n                        return /*#__PURE__*/_jsxDEV(Select.Option, {\n                          value: item.id,\n                          children: item.name\n                        }, item.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 212,\n                          columnNumber: 57\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 6,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"cover\",\n                    rules: [{\n                      required: true\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(Upload, {\n                      action: `${HOST}:${PORT}/cate/upload`,\n                      name: \"cover\",\n                      listType: \"picture-card\",\n                      fileList: this.state.fileList,\n                      onChange: this.handleImageChange,\n                      data: file => ({\n                        photoContent: file\n                      }),\n                      onPreview: this.handlePreview,\n                      beforeUpload: this.beforeUpload,\n                      maxCount: 1,\n                      children: this.state.fileList.length > 1 ? null : uploadButton\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"desc\",\n                    rules: [{\n                      required: true,\n                      message: \"请输入文章摘要\"\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(TextArea, {\n                      placeholder: \"请输入文章摘要\",\n                      autoSize: {\n                        minRows: 4,\n                        maxRows: 4\n                      },\n                      style: {\n                        width: \"500px\"\n                      },\n                      showCount: true,\n                      maxLength: 255\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          dataSource: this.state.allArticle,\n          itemLayout: \"vertical\",\n          size: \"large\",\n          style: {\n            marginTop: \"20px\"\n          },\n          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n            actions: [\"创建时间：\" + item.created_at + \"更新时间：\" + item.updated_at],\n            extra: /*#__PURE__*/_jsxDEV(\"img\", {\n              width: 272,\n              alt: \"logo\",\n              src: item.cover\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 49\n            }, this),\n            children: item.desc\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Article;","map":{"version":3,"sources":["E:/装修小程序/decorate/src/components/article.js"],"names":["React","Button","Col","Drawer","Form","Input","List","message","Modal","Row","Select","Space","Upload","axios","HOST","PORT","BraftEditor","PlusOutlined","TextArea","Article","Component","constructor","props","addRef","createRef","getAllCate","get","then","result","data","status","setState","allCate","catch","err","console","log","getAllArticle","allArticle","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","beforeUpload","isCorrect","type","info","LIST_IGNORE","handlePreview","url","preview","originFileObj","previewVisiable","previewTitle","name","substring","lastIndexOf","previewImage","handleImageChange","fileList","confirmAdd","confirm","title","okText","cancelText","centered","onOk","addArticle","current","validateFields","value","post","event","cate","desc","cover","state","response","imgPath","content","toHTML","success","msg","addVisiable","selectedValue","componentDidMount","render","editorProps","contentFormat","initialContent","uploadButton","marginTop","padding","width","display","id","map","item","required","borderRadius","border","photoContent","length","minRows","maxRows","created_at","updated_at"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button, Col, Drawer, Form, Input, List, message, Modal, Row, Select, Space, Upload} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {HOST, PORT} from \"../config/apiconfig\";\r\nimport BraftEditor from \"braft-editor\";\r\nimport \"braft-editor/dist/index.css\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\n\r\nclass Article extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allCate: [], // 存放所有的类别\r\n            allArticle: [], // 存放所有的文章\r\n            selectedValue: \"\", // 记录当前选择器是文章标题还是文章类别\r\n            addVisiable: false, // 记录添加抽屉是否打开\r\n            fileList: [], // 图片文件列表\r\n            previewVisiable: false, // 是否预览图片文件\r\n            previewTitle: \"\", // 预览模态框上标题\r\n            previewImage: \"\", // 预览的图片文件\r\n        }\r\n    }\r\n\r\n    addRef = React.createRef(); // 操作添加表单\r\n\r\n    getAllCate = () => { // 获取所有的类别\r\n        axios.get(`${HOST}:${PORT}/cate/article`)\r\n            .then(result => {\r\n                if (result.data.status === 200) {\r\n                    this.setState({\r\n                        allCate: result.data.data\r\n                    })\r\n                }\r\n            }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    getAllArticle = () => { // 获取所有的文章信息\r\n        axios.get(`${HOST}:${PORT}/article/all`)\r\n            .then(result => {\r\n                if (result.data.status === 200) {\r\n                    this.setState({\r\n                        allArticle: result.data.data\r\n                    })\r\n                }\r\n            }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    getBase64 = (file) => { // 读取图片文件\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader(); // 创建读取文件的对象\r\n            reader.readAsDataURL(file); // 读取文件的url\r\n            reader.onload = () => resolve(reader.result); // 返回文件内容\r\n            reader.onerror = (err) => reject(err);\r\n        })\r\n    }\r\n\r\n    beforeUpload = (file) => { // 对图片格式进行校验\r\n        const isCorrect = (file.type === \"image/jpeg\" || file.type === \"image/png\"); // 判断图片格式是否正确\r\n        if (!isCorrect) { // 如果不正确\r\n            message.info(\"请上传JPG或PNG格式的图片\");\r\n            return Upload.LIST_IGNORE; // 阻止上传\r\n        }\r\n        return isCorrect;\r\n    }\r\n\r\n    handlePreview = async (file) => { // 图片预览功能\r\n        if (!file.url && !file.preview) { // 如果文件没有打开且没有预览，打开并预览\r\n            file.preview = await this.getBase64(file.originFileObj);\r\n        }\r\n        this.setState({\r\n            previewVisiable: true, // 打开预览模态框\r\n            previewTitle: file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1), // 设置标题\r\n            previewImage: file.url || file.preview, // 设置预览图片\r\n        })\r\n    }\r\n\r\n    handleImageChange = ({fileList}) => { // 设置上传的图片列表\r\n        this.setState({\r\n            fileList: fileList\r\n        })\r\n    }\r\n\r\n    confirmAdd = () => { // 确定是否添加类别模态框\r\n        Modal.confirm({\r\n            title: \"确定添加类别\",\r\n            okText: \"确定\",\r\n            cancelText: \"取消\",\r\n            centered: true,\r\n            onOk: this.addArticle\r\n        })\r\n    }\r\n\r\n    addArticle = async () => { // 添加文章\r\n        try {\r\n            await this.addRef.current.validateFields()\r\n                .then(value => {\r\n                    axios.post(`${HOST}:${PORT}/article/add`, {\r\n                        event: {\r\n                            title: value.title,\r\n                            cate: value.cate,\r\n                            desc: value.desc,\r\n                            cover: this.state.fileList[0].response.imgPath,\r\n                            content: value.content.toHTML()\r\n                        }\r\n                    }).then(result => {\r\n                        if (result.data.status === 201) {\r\n                            message.success(result.data.msg);\r\n                            this.setState({\r\n                                addVisiable: false, // 关闭添加抽屉\r\n                                fileList: [] // 将图片列表制空\r\n                            })\r\n                            this.getAllArticle();\r\n                        }\r\n                    })\r\n                })\r\n        } catch (err) {\r\n            // throw err;\r\n        }\r\n    }\r\n\r\n    componentDidMount() { // 页面加载完成后执行\r\n        this.getAllCate(); // 获取所有的类别\r\n        this.getAllArticle();\r\n    }\r\n\r\n    render() {\r\n        const {allCate, selectedValue} = this.state;\r\n\r\n        const editorProps = {\r\n            contentFormat: \"html\",\r\n            initialContent: \"<p>hello</p>\",\r\n            // onChange: this.handleChange,\r\n            // onRawChange: this.handleRowChange\r\n        }\r\n\r\n        const uploadButton = ( // 定义未上传时显示的按钮\r\n            <div>\r\n                <PlusOutlined/>\r\n                <div style={{marginTop: \"8px\"}}>上传封面</div>\r\n            </div>);\r\n\r\n        return (\r\n            <div style={{padding: \"30px 20px\"}}>\r\n                <div style={{width: \"40%\"}}>\r\n                    <Input.Group compact style={{display: \"flex\"}} className={\"select\"}>\r\n                        <Select defaultValue={\"title\"} onChange={value => { // 当变化时调用\r\n                            // value是cate和title\r\n                            this.setState({\r\n                                selectedValue: value\r\n                            })\r\n                            this.getAllArticle(); // 切换时刷新文章\r\n                        }}>\r\n                            <Select.Option value={\"title\"}>文章标题</Select.Option>\r\n                            <Select.Option value={\"cate\"}>文章类别</Select.Option>\r\n                        </Select>\r\n                        {selectedValue == \"cate\" ? (\r\n                            <Select style={{width: \"200px\"}} defaultValue={allCate[0].id}>\r\n                                {allCate.map(item => {\r\n                                    return (\r\n                                        <Select.Option value={item.id} key={item.id}>{item.name}</Select.Option>\r\n                                    )\r\n                                })}\r\n                            </Select>\r\n                        ) : (<Input style={{width: \"200px\"}} id={\"input\"}/>)}&nbsp;&nbsp;&nbsp;\r\n                        <Button type={\"primary\"}>搜索</Button>&nbsp;&nbsp;&nbsp;\r\n                        <Button type={\"primary\"} onClick={() => this.setState({addVisiable: true})}>添加</Button>\r\n\r\n                        <Drawer width={\"80%\"} visible={this.state.addVisiable}\r\n                                onClose={() => this.setState({addVisiable: false, fileList: []})}\r\n                                title={\"编辑文章\"}\r\n                                extra={\r\n                                    <Space>\r\n                                        <Button type={\"primary\"} onClick={this.confirmAdd}>发布文章</Button>\r\n                                        <Button type={\"primary\"}\r\n                                                onClick={() => this.setState({\r\n                                                    addVisiable: false,\r\n                                                    fileList: []\r\n                                                })}>取消编辑</Button>\r\n                                    </Space>\r\n                                }\r\n                                destroyOnClose={true}>\r\n                            <Form ref={this.addRef} layout={\"vertical\"} hideRequiredMark>\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Form.Item name={\"title\"} rules={[{required: true, message: \"请输入文章标题\"}]}\r\n                                                   initialValue={\"【无标题】\"}>\r\n                                            <Input placeholder={\"请输入文章标题\"} size={\"large\"}\r\n                                                   style={{borderRadius: \"20px\"}}/>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Form.Item name={\"content\"}>\r\n                                            <BraftEditor {...editorProps} style={{border: \"1px solid #d9d9d9\"}}\r\n                                                         placeholder={\"在这里输入正文\"}/>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col span={5}>\r\n                                        <Form.Item name={\"cate\"} rules={[{required: true, message: \"请选择类别\"}]}\r\n                                                   label={\"文章类别\"}>\r\n                                            <Select style={{width: \"200px\"}}>\r\n                                                {allCate.map(item => {\r\n                                                    return (\r\n                                                        <Select.Option value={item.id}\r\n                                                                       key={item.id}>{item.name}</Select.Option>\r\n                                                    )\r\n                                                })}\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        <Form.Item name={\"cover\"} rules={[{required: true}]}>\r\n                                            <Upload action={`${HOST}:${PORT}/cate/upload`}\r\n                                                    name={\"cover\"}\r\n                                                    listType={\"picture-card\"}\r\n                                                    fileList={this.state.fileList}\r\n                                                    onChange={this.handleImageChange}\r\n                                                    data={file => ({photoContent: file})}\r\n                                                    onPreview={this.handlePreview}\r\n                                                    beforeUpload={this.beforeUpload}\r\n                                                    maxCount={1}>\r\n                                                {this.state.fileList.length > 1 ? null : uploadButton}\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                        <Form.Item name={\"desc\"} rules={[{required: true, message: \"请输入文章摘要\"}]}>\r\n                                            <TextArea placeholder={\"请输入文章摘要\"} autoSize={{minRows: 4, maxRows: 4}}\r\n                                                      style={{width: \"500px\"}} showCount maxLength={255}></TextArea>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Drawer>\r\n                    </Input.Group>\r\n                    <List dataSource={this.state.allArticle} itemLayout={\"vertical\"} size={\"large\"}\r\n                          style={{marginTop: \"20px\"}}\r\n                          renderItem={item => (\r\n                              <List.Item key={item.id}\r\n                                         actions={[\"创建时间：\" + item.created_at + \"更新时间：\" + item.updated_at]}\r\n                                         extra={<img width={272} alt={\"logo\"} src={item.cover}/>}>\r\n                                  {/*<List.Item.Mg*/}\r\n                                  {item.desc}\r\n                              </List.Item>\r\n                          )}\r\n                    >\r\n                    </List>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Article;"]},"metadata":{},"sourceType":"module"}